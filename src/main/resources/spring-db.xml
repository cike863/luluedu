<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans-4.3.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx-4.3.xsd
        http://www.springframework.org/schema/aop
		http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
        "
       default-autowire="byName">
    <description>Spring Jdbc 配置</description>

    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
        <!-- 基本属性 url、user、password -->
        <property name="url" value="${edu.jdbc.url}"/>
        <property name="username" value="${edu.jdbc.username}"/>
        <property name="password" value="${edu.jdbc.password}"/>

        <!-- 配置初始化大小、最小、最大 -->
        <!-- 初始化连接数 -->
        <property name="initialSize" value="1"/>
        <!-- 最小空闲连接数 -->
        <property name="minIdle" value="${edu.jdbc.minIdle}"/>
        <!-- 最大连接数 -->
        <property name="maxActive" value="${edu.jdbc.maxActive}"/>
        <!-- 当连接池中连接已经用完了，等待建立一个新连接的最大毫秒数 -->
        <!-- 配置获取连接等待超时的时间 -->
        <property name="maxWait" value="${edu.jdbc.maxWait}"/>

        <!-- 间隔多久才进行一次检测，检测需要关闭的空闲连接，单位毫秒 -->
        <property name="timeBetweenEvictionRunsMillis" value="60000"/>

        <!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
        <property name="minEvictableIdleTimeMillis" value="300000"/>

        <!-- 此配置项会影响性能，只在排查的时候打开。系统运行时最好关闭。 -->
        <!-- 超过时间限制是否回收 -->
        <!--        <property name="removeAbandoned" value="false"/>
                &lt;!&ndash; 超时时间；单位为秒。180秒=3分钟 &ndash;&gt;
                <property name="removeAbandonedTimeout" value="180"/>
                &lt;!&ndash; 关闭abanded连接时输出错误日志 &ndash;&gt;
                <property name="logAbandoned" value="true"/>-->

        <!--用来验证从连接池取出的连接,在将连接返回给调用者之前.如果指定,则查询必须是一个SQL SELECT并且必须返回至少一行记录-->
        <property name="validationQuery" value="SELECT 'x'"/>
        <!-- 指明连接是否被空闲连接回收器(如果有)进行检验.如果检测失败,则连接将被从池中去除.注意:
        设置为true后如果要生效,validationQuery参数必须设置为非空字符串 -->
        <property name="testWhileIdle" value="true"/>
        <!-- 默认值是 true ，当从连接池取连接时，验证这个连接是否有效 -->
        <property name="testOnBorrow" value="false"/>
        <!-- 默认值是 false, 当把该连接放回到连接池的时，验证这个连接是否有效 -->
        <property name="testOnReturn" value="false"/>

        <!-- mysql 5.5以上打开PSCache，并且指定每个连接上PSCache的大小
         如果用Oracle，则把poolPreparedStatements配置为true，mysql可以配置为false。分库分表较多的数据库，建议配置为false-->
        <property name="poolPreparedStatements" value="false"/>
        <property name="maxPoolPreparedStatementPerConnectionSize" value="50"/>

        <!-- 配置监控统计拦截的filters stat, -->
        <property name="filters" value="slf4j"/>
        <property name="proxyFilters">
            <list>
                <ref bean="stat-filter"/>
                <ref bean="wall-filter"/>
            </list>
        </property>
    </bean>

    <bean id="wall-config" class="com.alibaba.druid.wall.WallConfig">
        <property name="multiStatementAllow" value="true"/>
    </bean>

    <bean id="wall-filter" class="com.alibaba.druid.wall.WallFilter">
        <property name="dbType" value="mysql"/>
        <property name="config" ref="wall-config"/>
    </bean>

    <bean id="stat-filter" class="com.alibaba.druid.filter.stat.StatFilter">
        <property name="slowSqlMillis" value="1000"/>
        <property name="logSlowSql" value="true"/>
        <property name="mergeSql" value="true"/>
    </bean>

    <!-- 使用SqlSessionFactoryBean工厂产生SqlSession对象，方便后期注入Mapper -->
    <bean id="blisssmallGoodsMysqlSqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <!-- 在classpath后面的*必不可少，缺少型号的话后面的通配符不起作用。**表示可以表示任意多级目录 *表示多个任意字符 -->
        <property name="configLocation" value="classpath:mybatisConfig/mybatis-config.xml"/>
        <property name="mapperLocations">
            <list>
                <value>classpath*:mybatis.sqlmapper.edu/**/*.xml</value>
               <!-- <value>classpath*:mybatis/sqlmapper/edu/**/*.xml</value>-->
            </list>
        </property>
        <!-- typeAliasesPackage为entity包全名,多个用逗号或者分号隔开 -->
        <property name="typeAliasesPackage" value="net.blissmall.goods.server.domain"/>
    </bean>

    <!-- 本项目的sqlSessionTemplate -->
    <bean id="blisssmallGoodsSqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">
        <constructor-arg ref="blisssmallGoodsMysqlSqlSessionFactory"/>
    </bean>

    <!-- 事务管理器配置,单数据源事务 -->
    <bean name="transactionManager"
          class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <bean name="transactionTemplate" class="org.springframework.transaction.support.TransactionTemplate">
        <property name="transactionManager" ref="transactionManager"/>
    </bean>

</beans>